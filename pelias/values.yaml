# override this to use external elasticsearch
elasticsearch:
  host: "elasticsearch-service"
  port: 9200
  protocol: "http"

canary:
  elasticsearch:
    host: null

## API settings
api:
  replicas: 1
  canaryReplicas: 0
  dockerTag: "latest"
  canaryDockerTag: null # set this value to enable the canary deployment
  indexName: "pelias"
  attributionURL: "http://api.yourpelias.com/attribution"
  # Whether the API service should be externally accessible
  # Set this to true if you want to, for example on AWS, set up an ELB for the API
  externalService: false
  # whether the external service  should be internet facing or private (default private)
  privateLoadBalancer: true
  accessLog: "common" # allows configuring access log format. Empty string disables access log
  autocomplete:
    exclude_address_length: 0
  targets:
    auto_discover: null # use default value
  exposeInternalDebugTools: false
  requests:
    memory: 0.25Gi
    cpu: 0.1
  minReadySeconds: 10
  annotations: {}
  nodeSelector: {}

placeholder:
  enabled: true
  replicas: 1
  host: "http://pelias-placeholder-service:3000/"
  dockerTag: "latest"
  maxSurge: 1
  maxUnavailable: 0
  minReadySeconds: 5
  storeURL: "https://s3.amazonaws.com/pelias-data.nextzen.org/portland-metro/placeholder/store.sqlite3.gz"
  cpus: 1 # how many CPUs to allow using via the npm `cluster2` module
  retries: 1 # number of time the API will retry requests to placeholder
  timeout: 5000 # time in ms the API will wait for placeholder responses
  downloadCommand: >
      mkdir -p /data/placeholder/ &&
      wget -O- "$DOWNLOAD_URL" | gunzip > /data/placeholder/store.sqlite3
  limits:
    # cannot use a hyphen to match the k8s param due to https://github.com/helm/helm/issues/2192
    ephemeral_storage: 5Gi
  requests:
    memory: 512Mi
    cpu: 0.1
    # cannot use a hyphen to match the k8s param due to https://github.com/helm/helm/issues/2192
    ephemeral_storage: 5Gi
  annotations: {}
  nodeSelector: {}
  pvc: {}
#    create: true
#    name: placeholder-pvc
#    storageClass: aws-efs
#    accessModes: ReadWriteMany
#    storage: 10Gi
#    annotations: {}

libpostal:
  enabled: true
  replicas: 1
  host: "http://pelias-libpostal-service:4400/"
  dockerTag: "latest"
  maxSurge: 1
  maxUnavailable: 0
  minReadySeconds: 5
  retries: 1 # number of time the API will retry requests to libpostal
  timeout: 5000 # time in ms the API will wait for libpostal responses
  annotations: {}
  nodeSelector: {}

interpolation:
  enabled: false
  replicas: 1
  host: "http://pelias-interpolation-service:3000/"
  dockerTag: "latest"
  maxSurge: 1
  maxUnavailable: 0
  minReadySeconds: 5
  # URL prefix of location where streets.db and address.db will be downloaded
  downloadPath: "https://s3.amazonaws.com/pelias-data.nextzen.org/portland-metro/interpolation"
  retries: 1 # number of time the API will retry requests to interpolation service
  timeout: 5000 # time in ms the API will wait for interpolation service responses
  downloadCommand: >
    mkdir -p /data/interpolation/ &&
    wget -O - $DOWNLOAD_PATH/street.db.gz | gunzip > /data/interpolation/street.db &
    wget -O - $DOWNLOAD_PATH/address.db.gz | gunzip > /data/interpolation/address.db
  limits:
    # cannot use a hyphen to match the k8s param due to https://github.com/helm/helm/issues/2192
    ephemeral_storage: 5Gi
  requests:
    memory: 2Gi
    cpu: 0.1
    # cannot use a hyphen to match the k8s param due to https://github.com/helm/helm/issues/2192
    ephemeral_storage: 5Gi
  annotations: {}
  nodeSelector: {}
  pvc: {}
#    create: true
#    name: interpolation-pvc
#    storageClass: aws-efs
#    accessModes: ReadWriteMany
#    storage: 10Gi
#    annotations: {}

pip:
  enabled: true
  replicas: 1
  host: "http://pelias-pip-service:3102/"
  dockerTag: "latest"
  maxSurge: 1
  minReadySeconds: 5
  maxUnavailable: 0 # adjusts rolling update settings
  retries: 1 # number of time the API will retry requests to the pip service
  timeout: 5000 # time in ms the API will wait for pip service responses
  initialDelaySeconds: 300 # pip service takes a long time to start up
  downloadCommand: "./bin/download --admin-only"
  limits:
    memory: 10Gi
    cpu: 3
    # cannot use a hyphen to match the k8s param due to https://github.com/helm/helm/issues/2192
    ephemeral_storage: 35Gi
  requests:
    memory: 5Gi
    cpu: 0.1
    # cannot use a hyphen to match the k8s param due to https://github.com/helm/helm/issues/2192
    ephemeral_storage: 35Gi
  annotations: {}
  nodeSelector: {}
  pvc: {}
#    create: true
#    name: pip-pvc
#    storageClass: aws-efs
#    accessModes: ReadWriteMany
#    storage: 10Gi
#    annotations: {}

dashboard:
  enabled: true
  replicas: 1
  dockerTag: "latest"
  domain: null # set this to enable an ingress
  nodeSelector: {}

healthlogger:
  replicas: 0
  dockerTag: "latest"
  maxSurge: 1
  maxUnavailable: 0
  minReadySeconds: 1
  requests:
    memory: 100Mi
    cpu: 0.1
  annotations: {}
  nodeSelector: {}
  watch_interval: 60

# Deprecated fields
# pipEnabled: true
# pipHost: "http://pelias-pip-service:3102/"

# interpolationEnabled: false
# interpolationHost: "http://pelias-interpolation-service:3000/"

# Importer settings
whosonfirst:
  sqlite: false
  dataHost: null

imports:
  geonames:
    countrycode: "US"
  openstreetmap:
    url: "https://download.geofabrik.de/north-america/us-latest.osm.pbf"
    filename: "us-latest.osm.pbf"
  whosonfirst:
    countrycode: "US" 
